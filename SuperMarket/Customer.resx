<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AddOrder.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>